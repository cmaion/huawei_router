#!/bin/bash
ROUTER=192.168.1.1
LOGIN=admin
PASSWD=admin

. ~/.huawei_router

DEBUG=0
TMP_STATE=/tmp/huawei-state.$$
TMP_HEADER=/tmp/huawei-headers.$$

cleanup() {
    rm -f "$TMP_STATE" "$TMP_HEADER"
}
trap cleanup EXIT

log() {
    echo "[huawei_router] $*" >&2
}

extract_from_xml() {
    echo "$1" | sed -n "s/.*<$2>\\([^<]\\+\\)<.*$/\\1/p"
}

prepare() {
    [ -f "$TMP_STATE" ] && . "$TMP_STATE"

    if [ -z "$COOKIE" ]; then
        log "Connecting"
        resp=$(curl -s http://$ROUTER/api/webserver/SesTokInfo)
        COOKIE=$(extract_from_xml "$resp" SesInfo)
        echo "COOKIE='$COOKIE'" > "$TMP_STATE"
        TOKEN=$(extract_from_xml "$resp" TokInfo)
        echo "TOKEN='$TOKEN'" >> "$TMP_STATE"
    fi
}

request() {
    prepare

    url=$1
    data=$2
    log "Requesting $url"

    curl_flags="-s"
    [ $DEBUG -eq 1 ] && curl_flags="$curl_flags -v"

    if [ -n "$data" ]; then
        [ $DEBUG -eq 1 ] && log "Posting: $data"

        rm -f "$TMP_HEADER"
        resp=$(curl $curl_flags http://$ROUTER/$url \
            -D "$TMP_HEADER" \
            -H "__RequestVerificationToken: $TOKEN" \
            -H "Cookie: $COOKIE" \
            -H "Content-Length: ${#data}" \
            -H "X-Requested-With: XMLHttpRequest" \
            -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" \
            --data "$data")

        new_cookie=$(sed -n 's/^Set-Cookie:\([^;\n]*\).*$/\1/p' "$TMP_HEADER")
        if [ -n "$new_cookie" ]; then
            [ $DEBUG -eq 1 ] && log "Saving new session cookie"
            s=$([ -f "$TMP_STATE" ] && grep -v "COOKIE=" "$TMP_STATE")
            echo "$s" > "$TMP_STATE"
            echo "COOKIE='$new_cookie'" >> "$TMP_STATE"
        fi
        new_token=$(sed -n 's/^__RequestVerificationToken:\([^\r]*\).*$/\1/p' "$TMP_HEADER")
        if [ -n "$new_token" ]; then
            [ $DEBUG -eq 1 ] && log "Saving new token"
            s=$([ -f "$TMP_STATE" ] && grep -v "TOKEN=" "$TMP_STATE")
            echo "$s" > "$TMP_STATE"
            echo "TOKEN='$new_token'" >> "$TMP_STATE"
        fi
        rm -f "$TMP_HEADER"
    else
        resp=$(curl $curl_flags http://$ROUTER/$url \
            -H "Cookie: $COOKIE")
    fi

    [ $DEBUG -eq 1 ] && log "Response: $resp"

    echo "$resp"
}

is_logged_in() {
    resp=$(request "api/user/state-login")
    username=$(extract_from_xml "$resp" Username)
    state=$(extract_from_xml "$resp" State)
    if [ "$state" = "0" ]; then
        log "Username $username, logged in"
    else
        if [ -z "$username" ]; then
            log "NOT logged in"
        else
            log "Username $username, NOT logged in"
        fi
    fi
}

status() {
    request "api/monitoring/status"
}

network() {
    request "api/net/current-plmn"
}

month_stats() {
    request "api/monitoring/month_statistics"
}

login() {
    prepare
    password=$(printf "$(printf "$PASSWD" | sha256sum |  cut -d ' ' -f 1)" | base64 -w 0)
    login_xml="<?xml version=\"1.0\" encoding=\"UTF-8\"?><request><Username>$LOGIN</Username><Password>$(printf "$(printf "$LOGIN$password$TOKEN" | sha256sum | cut -d ' ' -f 1)" | base64 -w 0)</Password><password_type>4</password_type></request>"
    resp=$(request api/user/login "$login_xml")

    ok=$(extract_from_xml "$resp" response)
    if [ "$ok" != "OK" ]; then
        log "Couldn't log in"
        exit 2
    fi
}

sms_count() {
    request "api/sms/sms-count"
}

unread_count() {
    resp=$(request "api/monitoring/check-notifications")
    extract_from_xml "$resp" UnreadMessage
}

send_sms() {
    phone=$1
    msg=$2
    sms_xml="<?xml version='1.0' encoding='UTF-8'?><request><Index>-1</Index><Phones><Phone>$phone</Phone></Phones><Sca></Sca><Content>$msg</Content><Length>${#msg}</Length><Reserved>1</Reserved><Date>$(date +"%Y-%m-%d %H:%M:%S")</Date></request>"
    resp=$(request api/sms/send-sms "$sms_xml")

    ok=$(extract_from_xml "$resp" response)
    if [ "$ok" != "OK" ]; then
        log "Couldn't send SMS"
        exit 2
    else
        log "SMS sent successfully"
    fi
}

delete_sms() {
    index=$1
    sms_xml="<?xml version=\"1.0\" encoding=\"UTF-8\"?><request><Index>$index</Index></request>"
    resp=$(request api/sms/delete-sms "$sms_xml")

    ok=$(extract_from_xml "$resp" response)
    if [ "$ok" != "OK" ]; then
        log "Couldn't delete SMS $index"
        exit 2
    else
        log "SMS $index deleted successfully"
    fi
}

purge_outbox() {
    resp=$(sms_count)
    count=$(extract_from_xml "$resp" LocalOutbox)
    log "$count messages in the outbox"
    if [ -n "$count" -a $count -gt 0 ]; then
        login
        sms_list_xml='<?xml version="1.0" encoding="UTF-8"?><request><PageIndex>1</PageIndex><ReadCount>20</ReadCount><BoxType>2</BoxType><SortType>0</SortType><Ascending>0</Ascending><UnreadPreferred>0</UnreadPreferred></request>'

        resp=$(request api/sms/sms-list "$sms_list_xml")

        for index in $(extract_from_xml "$resp" Index); do
            delete_sms $index
        done
    fi
}

usage() {
    exec 1>&2
    echo "Usage:"
    echo "  $0 [status|network|month_stats|unread_count|purge_outbox]"
    echo "  $0 send <phone> <msg>"
    echo "  $0 request <api/...>"
    echo "  $0 login_request <api/...>"
}

case $1 in
    request)
        shift
        request $1
        ;;
    login_request)
        shift
        login
        request $1
        ;;
    status)
        status
        ;;
    network)
        network
        ;;
    month_stats)
        month_stats
        ;;
    unread_count)
        unread_count
        ;;
    send)
        login
        shift
        send_sms "$@"
        ;;
    purge_outbox)
        purge_outbox
        ;;
    *)
        usage
        exit 2
        ;;
esac
